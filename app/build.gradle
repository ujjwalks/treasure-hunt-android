apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mindtickle.assignment.assignmentapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        release.java.srcDirs += 'src/release/kotlin'
        test {
            java.srcDirs += 'src/sharedTest/kotlin'
            java.srcDirs += 'src/test/kotlin'
        }
        androidTest {
            java.srcDirs += 'src/sharedTest/kotlin'
            java.srcDirs += 'src/androidTest/kotlin'
        }
    }

    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    testOptions.unitTests {
        returnDefaultValues = true
        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        abortOnError false
    }
}

project.ext {
    retrofit_version = '2.3.0'
    espresso_version = '3.0.1'
    test_runner_version = '1.0.1'
    support_version = '28.0.0'
    arch_room_version = '1.1.1'
    lifecycle_version = '1.1.1'
    lifecycle_ext_version = '1.1.1'
    dagger_version = '2.23.1'
    google_gms_version = '11.8.0'
    okhttp_version = '3.9.1'
    realm_version = '4.3.1'
    stetho_version = '1.5.0'
    timber_version = '4.7.0'
    anko_version = '0.10.4'
    leakcanary_version = '1.5'
    rxjava_version = '2.1.8'
    rxandroid_version = '2.0.2'
    parceler_version = '1.1.9'
    firebase_version = '11.8.0'
    multidex_version = '1.0.3'
    mockito_version = '2.28.2'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation(name: 'ViewPagerIndicator-1.0-release', ext: 'aar')

    testImplementation 'junit:junit:4.12'

    testImplementation "com.android.support:support-annotations:$support_version"

    //Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //Robolectric
    testImplementation "org.robolectric:shadows-multidex:3.3"
    testImplementation "org.robolectric:robolectric:3.8"
    testImplementation 'android.arch.core:core-testing:1.1.1'

    //Mockito
    androidTestImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'

    //support dependencies
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:support-v13:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:support-v4:$support_version "
    implementation "com.android.support:gridlayout-v7:$support_version"
    implementation "com.android.support:transition:$support_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    implementation 'com.wang.avi:library:2.1.3'

    //okhttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'com.f2prateek.rx.preferences2:rx-preferences:2.0.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    implementation 'com.akaita.java:rxjava2-debug:1.2.2'
    implementation 'com.jakewharton.rxrelay2:rxrelay:2.0.0'

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    //room
    implementation "android.arch.persistence.room:runtime:$arch_room_version"
    kapt "android.arch.persistence.room:compiler:$arch_room_version"
    implementation "android.arch.persistence.room:rxjava2:$arch_room_version"
    testImplementation "android.arch.core:core-testing:$arch_room_version"
    testImplementation "android.arch.persistence.room:testing:$arch_room_version"

    //dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    //network interceptor
    implementation "com.facebook.stetho:stetho:$stetho_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"

    //logger
    implementation "com.jakewharton.timber:timber:$timber_version"

    //anko
    // Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    // sdk15, sdk19, sdk21, sdk23 are also available
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    // Coroutine listeners for Anko Layouts
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"
    //commons
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    //for snackbar
    implementation "org.jetbrains.anko:anko-design:$anko_version"

    //leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanary_version"

    //parceler
    implementation "org.parceler:parceler-api:$parceler_version"
    kapt "org.parceler:parceler:$parceler_version"

    //multidex
    implementation "com.android.support:multidex:$multidex_version"

    //firebase
    implementation "com.firebase:firebase-jobdispatcher:0.8.5"

    //about
    implementation('com.mikepenz:aboutlibraries:5.8.1@aar') {
        transitive = true
    }

    //lifecycle and LiveData and ViewModel
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
    implementation "android.arch.lifecycle:extensions:$lifecycle_ext_version"
    implementation "android.arch.lifecycle:common-java8:$lifecycle_ext_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_ext_version"

    testImplementation "org.json:json:20140107"
}



